set      nocompatible 
filetype on
filetype off
set backspace=indent,eol,start
set history=1000
set incsearch   "find the next match as we type the search
set hlsearch    "hilight searches by default
set showbreak=...
set wrap linebreak nolist 
syntax   enable               " Turn on syntax highlighting 
syntax   on 
filetype plugin on     " Turn on file type detection
filetype indent on 

"indent settings
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent

set	 showmode  	      "Display the mode im in 
set  showcmd	      "Display incomplete commands 
set  hidden               "Handle multiple buffers better 
set  ignorecase           "Case-insensitive searching 
set  smartcase            "But case sensitive if expression contains capital letter 

set	 number  	      "Show line numbers 
set  ruler     	      "Show cursor position 
set  visualbell 	      "Stop beeping when you are being noob at vim 
set	 wrap 		      "Turn on line wrapping
set  nowritebackup        " 
set  nobackup             "Don make a backup before overwritting a file
set  directory=$HOME/.vimswap/tmp 

"Pathogen.vim"
silent! call pathogen#runtime_append_all_bundles()

let g:ackprg="ack -H --nocolor --nogroup --column"

set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set grepprg=ack                  " Using ack instead of grep 
set laststatus=2                  " Show the status line all the time
" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal 
" autocmd FileType css  setlocal shiftwidth=2 tabstop=2
"
" " For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
autocmd BufNewFile,BufRead *_spec.rb compiler rspec


" " Command-t  
map <leader>gv :CommandTFlush<cr>\|:CommandT app/views<cr>
map <leader>gc :CommandTFlush<cr>\|:CommandT app/controllers<cr>
map <leader>gm :CommandTFlush<cr>\|:CommandT app/models<cr>
map <leader>gh :CommandTFlush<cr>\|:CommandT app/helpers<cr>
map <leader>gl :CommandTFlush<cr>\|:CommandT lib<cr>
map <leader>gd :CommandTFlush<cr>\|:CommandT db/migrate<cr>
map <leader>gp :CommandTFlush<cr>\|:CommandT public<cr>
map <leader>gs :CommandTFlush<cr>\|:CommandT public/stylesheets/sass<cr>
map <leader>gf :CommandTFlush<cr>\|:CommandT features<cr>
map <leader>gg :topleft 100 :split Gemfile<cr>
map <leader>f :CommandTFlush<cr>\|:CommandT<cr>
map <leader>F :CommandTFlush<cr>\|:CommandT %%<cr>

nnoremap <leader><leader> <c-^>


" " rspec 
nmap <leader>r : !rspec spec/<CR>

"" Clipboard integration
set clipboard=unnamed

" "Coffeescript two space indentation
au BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab
set shell=bash


" " Default colorscheme
"
colorscheme torte


" " Tab navigation
"
nmap <silent> <C-Up> :wincmd k<CR>
nmap <silent> <C-Down> :wincmd j<CR>
nmap <silent> <C-Left> :wincmd h<CR>
nmap <silent> <C-Right> :wincmd l<CR>


" " Markdown .md automatic set syntax 
au BufNewFile,BufRead *.md set syntax=markdown
" " Handlebars automatic syntax 
au BufNewFile,BufRead *.hbs set syntax=handlebars

" " Removing arrow keys navigations so i can turn myself into a vim ninja
" " Using control arrow keys to full screen each buffer at time
map <c-Up> <c-w>k<c-w>_<c-w><Bar>
map <c-Down> <c-w>j<c-w>_<c-w><Bar>
map <c-Left> <c-w>h<c-w>_<c-w><Bar>
map <c-Right> <c-w>l<c-w>_<c-w><Bar>

" " arrow keys for window resizing
map <Up> <c-w>+
map <Down> <c-w>-
map <Left> <c-w><
map <Right> <c-w>>

" " Vim buffers resizing

"" No remapping ESC for the same reason above
inoremap jj <Esc>


"" Giving my arrow keys back while on tmux 
  map <Esc>[B <Down>
